#include <iostream>
#include "Header.h"
using namespace std;





int main()
{
    setlocale(LC_ALL, "Russian");
    Account user;
    string oper;
    double money;
    cout << "deposit - внесение на счет\nwithdraw - снятие со счета\nexit - выход\n";
    // Через friendly

    /*while (true) {
        cout << "Введите тип операции и сумму (дробная часть отделяется запятой)\n";
        cin >> oper;
        if (oper == "exit")
        {
            exit(0);
        }
        cin >> money;
        if (oper == "withdraw") {
            withdraw(money, user);
            user.show();
        }
        else if (oper == "deposit") {
            deposit(money, user);
            user.show();
        }
        else
            cout << "Такой операции не существует\n";
    }*/

    // Через get-set

    while (true) {
        cout << "Введите тип операции и сумму (дробная часть отделяется запятой)\n";
        cin >> oper;
        if (oper == "exit") {
            exit(0);
        }
        cin >> money;
        if (oper == "withdraw") {
            user.moneyput(-money);
            cout << "Money: " << user.moneyget() << endl;
        }
        else if (oper == "deposit") {
            user.moneyput(money);
            cout << "Money: " << user.moneyget() << endl;
        }
        else
            cout << "Такой операции не существует\n";
    }
}


hhhh
#pragma once
#include <iostream>
using namespace std;
class Account {

private:
    double money;
public:
    Account() {
        money = 0;
    }
    void show() {
        cout << "Money: " << money << endl;
    }

    void moneyput(double money) {
        this->money += money;
    }
    double moneyget() {
        return money;
    }


    friend void deposit(double money, Account& person);
    friend void withdraw(double money, Account& person);
};



sssds
#include <iostream>
#include "Header.h"
using namespace std;
void deposit(double money, Account& person) {
    person.money += money;
}
void withdraw(double money, Account& person) {
    person.money -= money;
}
